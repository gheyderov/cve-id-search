from django.http import HttpResponse
from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle


def create_pdf(soup, cve_code, url):
    response = HttpResponse(content_type="application/pdf")
    response["Content-Disposition"] = f'attachment; filename="{cve_code}.pdf"'

    doc = SimpleDocTemplate(response, pagesize=letter)
    styles = getSampleStyleSheet()
    style_normal = styles["Normal"]
    bold_style = ParagraphStyle(
        "Bold", parent=style_normal, fontName="Helvetica-Bold")

    content = []

    title = soup.title.string if soup.title else "Title not found"
    content.append(Paragraph(f"<b>Title:</b> {title}", bold_style))
    content.append(Paragraph(f"<b>URL:</b> {url}", bold_style))
    content.append(Spacer(1, 12))
    content.append(Paragraph("<b>Content:</b>", bold_style))
    content.append(Spacer(1, 6))

    # Select a specific HTML element
    vuln_description = soup.find("h3", id="vulnDescriptionTitle")
    # If found, get its text
    if vuln_description:
        description_text = vuln_description.get_text(strip=True)
        content.append(Paragraph(description_text, style_normal))

        # Find the element p below it
        description_paragraph = vuln_description.find_next_sibling("p")
        if description_paragraph:
            description_text = description_paragraph.get_text(strip=True)
            content.append(Paragraph(description_text, style_normal))
        else:
            content.append(
                Paragraph("Description paragraph not found", style_normal))
    else:
        content.append(Paragraph("Description title not found", style_normal))

    doc.build(content)
    return response
